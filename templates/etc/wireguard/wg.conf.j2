#jinja2: lstrip_blocks:"True",trim_blocks:"True"
{# Copyright (C) 2018-2020 Robert Wimmer
 # Copyright (C)      2020 Robin Schneider <ypid@riseup.net>
 # SPDX-License-Identifier: GPL-3.0-or-later
 #}
# {{ ansible_managed }}
{% import 'templates/import/common.j2' as wireguard__tpl_macros with context %}

[Interface]
# {{ inventory_hostname }}
Address = {{ wireguard_address }}
{% if wireguard__key_templating == 'inline' %}
PrivateKey = {{ wireguard__fact_private_key }}
{% else %}
PostUp = wg set %i private-key {{ wireguard__keys_directory }}/%i.privkey
{%   for host in wireguard__peers %}
PostUp = wg set %i peer {{ hostvars[host].wireguard__fact_public_key
                           |d(hostvars[host].ansible_local.wireguard.interface[hostvars[host].wireguard_interface].Interface.PublicKey) }} preshared-key {{ wireguard__keys_directory }}/%i,{{ [inventory_hostname, host] | sort | join(",") }}.psk
{%   endfor %}
{% endif %}
{% if wireguard_port != omit %}
ListenPort = {{ wireguard_port }}
{% endif %}
{% if wireguard_dns|d() != '' %}
DNS = {{ [ wireguard_dns ] | flatten | join(", ") }}
{% endif %}
{% if wireguard_fwmark is defined %}
FwMark = {{ wireguard_fwmark }}
{% endif %}
{% if wireguard_mtu is defined %}
MTU = {{ wireguard_mtu }}
{% endif %}
{% if wireguard_table is defined %}
Table = {{ wireguard_table }}
{% endif %}
{% if wireguard_preup is defined %}
{% for wg_preup in wireguard_preup %}
PreUp = {{ wg_preup }}
{% endfor %}
{% endif %}
{% if wireguard_predown is defined %}
{% for wg_predown in wireguard_predown %}
PreDown = {{ wg_predown }}
{% endfor %}
{% endif %}
{% if wireguard_postup is defined %}
{% for wg_postup in wireguard_postup %}
PostUp = {{ wg_postup }}
{% endfor %}
{% endif %}
{% if wireguard_postdown is defined %}
{% for wg_postdown in wireguard_postdown %}
PostDown = {{ wg_postdown }}
{% endfor %}
{% endif %}
{% if wireguard_save_config is defined %}
SaveConfig = true
{% endif %}
{% for host in wireguard__peers %}

[Peer]
# {{ host }}
PublicKey = {{ hostvars[host].wireguard__fact_public_key
               |d(hostvars[host].ansible_local.wireguard.interface[hostvars[host].wireguard_interface].Interface.PublicKey) }}
{%   if wireguard__key_templating == 'inline' and host in wireguard__fact_psks %}
PresharedKey = {{ wireguard__fact_psks[host] }}
{%   endif %}
{%   if hostvars[host].wireguard_allowed_ips|d() %}
AllowedIPs = {{ [ hostvars[host].wireguard_address | ansible.netcommon.ipaddr('address') | ansible.netcommon.ipsubnet, hostvars[host].wireguard_allowed_ips ] | flatten | map("trim") | join(", ") }}
{%   else %}
AllowedIPs = {{ hostvars[host].wireguard_address | ansible.netcommon.ipaddr('address') | ansible.netcommon.ipsubnet }}
{%   endif %}
{%   if hostvars[host].wireguard_persistent_keepalive is defined %}
PersistentKeepalive = {{ hostvars[host].wireguard_persistent_keepalive }}
{%   endif %}
{{ wireguard__tpl_macros.print_peer_endpoint(host) }}
{% endfor %}
{% if wireguard_unmanaged_peers is defined %}

# Peers not managed by Ansible from "wireguard_unmanaged_peers" variable
{%   for peer in wireguard_unmanaged_peers.keys() %}
[Peer]
# {{ peer }}
PublicKey = {{ wireguard_unmanaged_peers[peer].public_key }}
{%     if wireguard_unmanaged_peers[peer].preshared_key is defined %}
PresharedKey = {{ wireguard_unmanaged_peers[peer].preshared_key }}
{%     endif %}
{%     if wireguard_unmanaged_peers[peer].allowed_ips is defined %}
AllowedIPs = {{ wireguard_unmanaged_peers[peer].allowed_ips }}
{%     endif %}
{%     if wireguard_unmanaged_peers[peer].endpoint is defined %}
Endpoint = {{ wireguard_unmanaged_peers[peer].endpoint }}
{%     endif %}
{%     if wireguard_unmanaged_peers[peer].persistent_keepalive is defined %}
PersistentKeepalive = {{ wireguard_unmanaged_peers[peer].persistent_keepalive }}
{%     endif %}
{%   endfor %}
{% endif %}
